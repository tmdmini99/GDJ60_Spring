<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

  <mapper namespace="com.iu.s1.bankbook.BankBookDAO">
  	
  	<sql id="searchCondition">
  		<if test="kind =='contents'">
  		 	WHERE BOOKDETAIL LIKE '%'||#{search}||'%'
  		</if>
  		<if test="kind =='title'">
  			WHERE BOOKNAME LIKE '%'||#{search}||'%'
  		</if>
  	
  	</sql>
  	
  	<sql id="searchCondition2">
  	
  		 WHERE 
		 <choose>
			<!-- 문법이  #을 붙이면 안됨 --> 
			<when test="kind == 'contents'">
			BOOKDETAIL
			</when>
			<otherwise>
			BOOKNAME
			</otherwise>
		</choose> 
	<!--연결 연산자 사용-->  LIKE '%'||#{search}||'%' 
  	</sql>
  	
  	<select id="getBankBookCount" parameterType="Pager" resultType="Long">
  		SELECT COUNT(BOOKNUMBER) FROM BANKBOOK
  		<include refid="searchCondition"></include> 
  		
  		
  	</select>
  	
  	
  	<select id="getBankBookList" parameterType="Pager" resultType="BankBookDTO">
  		SELECT * FROM
			(
				SELECT ROWNUM R,B.* FROM
					(SELECT * FROM BANKBOOK 
					
					<include refid="searchCondition"></include>
					
					
						
					ORDER BY BOOKNUMBER DESC) B)
		WHERE R BETWEEN #{startRow} AND #{lastRow}
  	</select>
  	<select id="getBankBookDetail" parameterType="BankBookDTO" resultMap="bankBookDetailResult">
  		SELECT B.*, BI.* 
  		FROM BANKBOOK B 
  			LEFT JOIN 
  			BANKBOOKIMG BI 
  			ON(B.BOOKNUMBER = BI.BOOKNUMBER)
  		WHERE B.BOOKNUMBER=#{bookNumber} 
  	</select>
  	<resultMap type="BankBookDTO" id="bankBookDetailResult">
  		<!-- Primary key = id -->
  		<id column="BOOKNUMBER" property="bookNumber"/>
  		<!-- 그 외 나머지 -->
  		<result column="BOOKNAME" property="bookName"/>
  		<result column="BOOKDETAIL" property="bookDetail"/>
  		<result column="BOOKRATE" property="bookRate"/>
  		<result column="BOOKSALE" property="bookSale"/>

  		<!-- 1:1 관계에서 사용  1대1 관계와 1대N관계가 둘다 있을경우 1:1관계부터 사용-->
  		<association property="bankBookImgDTO" javaType="BankBookImgDTO">
  			<id column="FILENUM" property="fileNum"/>
  			<result column="FILENAME" property="fileName"/>
  			<result column="ORINAME" property="oriName"/>
  		</association>
  		<!-- 1:N 관계에서 사용 -->
  		<!-- <collection property=""></collection> -->
  	</resultMap>
  	
  	 <insert id="setBankBookAdd" parameterType="BankBookDTO">
  		<selectKey keyProperty="bookNumber" resultType="Long" order="BEFORE">
  		SELECT BANKBOOK_SEQ.NEXTVAL FROM DUAL
  		</selectKey>
  		
  		INSERT INTO BANKBOOK VALUES(#{bookNumber},#{bookName},#{bookRate},#{bookSale},#{bookDetail})
  	</insert> 
  	
  	<update id="setBankBookUpdate" parameterType="BankBookDTO">
  	UPDATE BANKBOOK SET BOOKNAME=#{bookName} ,BOOKRATE=#{bookRate}, BOOKSALE=#{bookSale}, BOOKDETAIL=#{bookDetail} WHERE BOOKNUMBER=#{bookNumber}
  	</update>
  	<delete id="setBankBookDelete" parameterType="BankBookDTO">
  	DELETE BANKBOOK WHERE BOOKNUMBER = #{bookNumber}
  	</delete>
  	<insert id="setBankBookImgAdd" parameterType="BankBookImgDTO">
  		INSERT INTO BANKBOOKIMG
  		VALUES(BANKBOOK_SEQ.NEXTVAL,#{bookNumber},#{fileName},#{oriName})
  	</insert>
  	
  
  </mapper>